openapi: 3.0.0
info:
  title: Verifications
  version: "1.0"
  contact:
    name: Sinch
    url: "https://www.sinch.com/contact-us/"
    email: support@sinch.com
  termsOfService: "https://www.sinch.com/terms-of-service/"
servers:
  - url: "URI:  https://verificationapi-v1.sinch.com/verification/[version]"
x-explorer-enabled: false
x-samples-enabled: true
x-samples-languages:
  - curl
  - java
  - csharp
  - node
x-headers:
  - key: Authorization
    value: "Bearer {token}"
paths:
  /verifications/:
    parameters: []
    post:
      summary: Verification request
      operationId: SendVerification
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                title: VerificationResponse
                type: object
                properties:
                  id:
                    type: string
                  sms:
                    title: SmsVerificationData
                    type: object
                    properties:
                      template:
                        type: string
                  flashCall:
                    title: FlashCallVerificationData
                    type: object
                    properties:
                      cliFilter:
                        type: string
                        description: is the filter that should be applied for incoming calls to intercept the flashcall.
                      inerceptionTimeout:
                        type: integer
                        description: indicates the amount of seconds that the SDK client will be waiting for the flashcall.
                  callout:
                    title: CalloutVerificationData
                    type: object
                    description: ""
                    properties:
                      startPollingafter:
                        type: integer
                      stopPollingAfter:
                        type: integer
                      pollingInterval:
                        type: integer
              examples:
                FlashCall:
                  value:
                    id: "1234567876"
                    flashCall:
                      cliFilter: "(.*)70123(.*)"
                      interceptionTimeout: 120
                Sms:
                  value:
                    id: "1234567890"
                    sms:
                      template: "Your verfication code is {{CODE}}"
                Callout:
                  value:
                    id: "1234567890"
                    callout:
                      startPollingAfter: 3
                      stopPollingAfter: 30
                      pollingInterval: 3
      requestBody:
        content:
          application/json:
            schema:
              title: VerificationRequest
              type: object
              properties:
                identity:
                  title: Identity
                  type: object
                  properties:
                    type:
                      type: string
                      example: "number"
                      default: "number"
                    endpoint:
                      type: string
                      example: "+15551231212"
                      default: "+15551231212"
                  description: 'identity indicates type of endpoint that will be verified and specifies the particular endpoint. The support endpoint type currently is only "number".'
                method:
                  type: string
                  default: sms
                  example: sms
                  description: |-
                    indicates the verification method. Possible values are:

                    - flashCall
                    - sms
                    - callout
                reference:
                  type: string
                  description: can be used to pass your own reference in the request for tracking purposes.
                  example: "Your internal id"
                custom:
                  type: string
                  description: can be used to pass custom data in the request.
                metadata:
                  title: metadata
                  type: object
                  properties:
                    flashCallOptions:
                      title: FlashCallOptions
                      type: object
                      properties:
                        cli:
                          type: string
                        dialTimeout:
                          type: integer
                      description: "is an optional object for flashCall verifications. It allows you to specify Cli and dial time out parameters for flashCall. Cli is a particular number to be used as caller Id in the flashCall. The number that you specify needs to be a number that you have rented from the Sinch portal. DialTimeout should be specified in seconds and must be between 5 and 120. FlashCallOptions object can be specified optionally, and only if the verification request was triggered from your backend (no SDK client) through an [Application signed request](https://developers.sinch.com/docs/using-rest#section-application-signed-request)."
                  description: ""
              required:
                - identity
                - method
            examples:
              FlashCall:
                value:
                  identity:
                    type: number
                    endpoint: "+46700000000"
                  method: flashCall
              Sms:
                value:
                  identity:
                    type: number
                    endpoint: "+46700000000"
                  method: sms
              Callout:
                value:
                  identity:
                    type: number
                    endpoint: "+46700000000"
                  method: callout
        description: ""
      description: |-
        This method is used by the mobile and web Verification SDKs to start a verification. It can also be used to request a verification from your backend, by making an [Application signed request](https://developers.sinch.com/docs/using-rest#section-application-signed-request). It is a POST request which specifies the phone number that should be verified and the verification method.

        Authorization
        Authorization level can be specified in the Sinch dashboard, under your app settings. By default it is set to "Deny". These schemes are allowed:

        - [Public authorization](https://developers.sinch.com/docs/using-rest#section-public-resources)
        - [Application signed request](https://developers.sinch.com/docs/using-rest#section-application-signed-request)
        - [Instance signed requests](https://developers.sinch.com/docs/using-rest#section-instance-signed-request)
      tags:
        - Verification API
  "/verifications/{type}/{endpoint}":
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
      - schema:
          type: string
        name: endpoint
        in: path
        required: true
    put:
      summary: "Report Verification"
      operationId: reportVerification
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                title: VerificationResult
                type: object
                properties:
                  id:
                    type: string
                    description: the verification id
                  method:
                    type: string
                    description: " shows the verification method. It can take the values:\n\n- \"flashcall\"\n- \"sms\"\n- \"callout\""
                  status:
                    type: string
                    description: |-
                      shows the current status of the verification request. It can take the values:

                      - "PENDING": the verification is ongoing
                      - "SUCCESSFUL": the verification was successful
                      - "FAIL": the verification attempt was made, but the number was not verified
                      - "DENIED": the verification attempt was denied by Sinch or your backend
                      - "ABORTED": the verification attempt was aborted by requesting a new verification
                      - "ERROR": the verification could not be completed   due to a network error or the number being unreachable.
                  reason:
                    type: string
                    description: |-
                      shows the reason why a verification has FAILED, was DENIED or was ABORTED. It can take the values:

                      - “Fraud”
                      - "Not enough credit"
                      - "Blocked"
                      - "Denied by callback"
                      - "Invalid callback"
                      - "Internal error"
                      - "Destination denied"
                      - "Network error or number unreachable"
                      - "Failed pending"
                      - "SMS delivery failure"
                      - "Invalid CLI"
                      - "Invalid code"
                      - "Expired"
                      - "Hung up without entering valid code"
                  reference:
                    type: string
                    description: shows the reference Id that was passed (optionally) together with the verification request.
                  source:
                    type: boolean
                    description: |-
                      This is free text that the client is sending, but it is used to show if the call/SMS was intercepted or not. Typical values can be:

                      - “intercepted”
                      - "manual"
              examples:
                response:
                  value:
                    id: "1234567890"
                    method: sms
                    status: SUCCESSFUL
                    source: intercept
      requestBody:
        content:
          application/json:
            schema:
              title: VerificationReportRequest
              type: object
              properties:
                method:
                  type: string
                  description: |-
                    indicates the verification method. Possible values are:

                    - flashCall
                    - sms
                sms:
                  title: SmsVerificationReportData
                  type: object
                  properties:
                    code:
                      type: string
                      description: indicates the PIN code that was inputted by the user in the app
                    cli:
                      type: string
                      description: indicates the caller Id of the flashCall or the sender Id of the SMS.
                flashCall:
                  title: flashCallVerificationReportData
                  type: object
                  properties:
                    cli:
                      type: string
                      description: indicates the caller Id of the flashCall or the sender Id of the SMS.
            examples:
              FlashCall:
                value:
                  method: flashCall
                  flashCall:
                    cli: "+46000000000"
              SMS:
                value:
                  method: sms
                  sms:
                    code: "123"
      tags:
        - Verification API
  "/verifications/id/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: is the verification id
    get:
      summary: Verification result by id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                title: VerificationResult
                type: object
                properties:
                  id:
                    type: string
                    description: the verification id
                  method:
                    type: string
                    description: " shows the verification method. It can take the values:\n\n- \"flashcall\"\n- \"sms\"\n- \"callout\""
                  status:
                    type: string
                    description: |-
                      shows the current status of the verification request. It can take the values:

                      - "PENDING": the verification is ongoing
                      - "SUCCESSFUL": the verification was successful
                      - "FAIL": the verification attempt was made, but the number was not verified
                      - "DENIED": the verification attempt was denied by Sinch or your backend
                      - "ABORTED": the verification attempt was aborted by requesting a new verification
                      - "ERROR": the verification could not be completed   due to a network error or the number being unreachable.
                  reason:
                    type: string
                    description: |-
                      shows the reason why a verification has FAILED, was DENIED or was ABORTED. It can take the values:

                      - “Fraud”
                      - "Not enough credit"
                      - "Blocked"
                      - "Denied by callback"
                      - "Invalid callback"
                      - "Internal error"
                      - "Destination denied"
                      - "Network error or number unreachable"
                      - "Failed pending"
                      - "SMS delivery failure"
                      - "Invalid CLI"
                      - "Invalid code"
                      - "Expired"
                      - "Hung up without entering valid code"
                  reference:
                    type: string
                    description: shows the reference Id that was passed (optionally) together with the verification request.
                  source:
                    type: boolean
                    description: |-
                      This is free text that the client is sending, but it is used to show if the call/SMS was intercepted or not. Typical values can be:

                      - “intercepted”
                      - "manual"
              examples:
                Response:
                  value:
                    id: "1234567890"
                    method: sms
                    status: SUCCESSFUL
                    source: intercept
      operationId: getVerificationsById
      description: |-
        Queries the verification result by sending the verification id

        With this query you can get the result of a verification.

        Authorization
        This is a protected resource and requires an [application signed request](https://developers.sinch.com/docs/using-rest#section-application-signed-request).
      tags:
        - Verification API
  "/verifications/reference/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: is the verification id
    get:
      summary: Verificaiton result by reference
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                title: VerificationResult
                type: object
                properties:
                  id:
                    type: string
                    description: the verification id
                  method:
                    type: string
                    description: " shows the verification method. It can take the values:\n\n- \"flashcall\"\n- \"sms\"\n- \"callout\""
                  status:
                    type: string
                    description: |-
                      shows the current status of the verification request. It can take the values:

                      - "PENDING": the verification is ongoing
                      - "SUCCESSFUL": the verification was successful
                      - "FAIL": the verification attempt was made, but the number was not verified
                      - "DENIED": the verification attempt was denied by Sinch or your backend
                      - "ABORTED": the verification attempt was aborted by requesting a new verification
                      - "ERROR": the verification could not be completed   due to a network error or the number being unreachable.
                  reason:
                    type: string
                    description: |-
                      shows the reason why a verification has FAILED, was DENIED or was ABORTED. It can take the values:

                      - “Fraud”
                      - "Not enough credit"
                      - "Blocked"
                      - "Denied by callback"
                      - "Invalid callback"
                      - "Internal error"
                      - "Destination denied"
                      - "Network error or number unreachable"
                      - "Failed pending"
                      - "SMS delivery failure"
                      - "Invalid CLI"
                      - "Invalid code"
                      - "Expired"
                      - "Hung up without entering valid code"
                  reference:
                    type: string
                    description: shows the reference Id that was passed (optionally) together with the verification request.
                  source:
                    type: boolean
                    description: |-
                      This is free text that the client is sending, but it is used to show if the call/SMS was intercepted or not. Typical values can be:

                      - “intercepted”
                      - "manual"
              examples:
                Response:
                  value:
                    id: "1234567123"
                    method: sms
                    status: SUCCESSFUL
                    source: manual
                    reference: abc_123
      operationId: getVerificationByReference
      description: |-
        Queries the verification result by sending the custom reference

        With this query you can get the result of a verification by sending the reference.

        Authorization
        This is a protected resource and requires an [application signed request](https://developers.sinch.com/docs/using-rest#section-application-signed-request).
      tags:
        - Verification API
  "/verifications/{methods}/number/{endpoint}":
    parameters:
      - schema:
          type: string
        name: methods
        in: path
        description: |-
          shows the verification method. It can take the values:

          - "flashcall"
          - "sms"
          - "callout"
        required: true
      - schema:
          type: string
        name: endpoint
        in: path
        required: true
        description: "Phonenumber that verifcation was send to"
    get:
      summary: Verification Result
      tags:
        - Verification API
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                title: VerificationResult
                type: object
                properties:
                  id:
                    type: string
                    description: the verification id
                  method:
                    type: string
                    description: " shows the verification method. It can take the values:\n\n- \"flashcall\"\n- \"sms\"\n- \"callout\""
                  status:
                    type: string
                    description: |-
                      shows the current status of the verification request. It can take the values:

                      - "PENDING": the verification is ongoing
                      - "SUCCESSFUL": the verification was successful
                      - "FAIL": the verification attempt was made, but the number was not verified
                      - "DENIED": the verification attempt was denied by Sinch or your backend
                      - "ABORTED": the verification attempt was aborted by requesting a new verification
                      - "ERROR": the verification could not be completed   due to a network error or the number being unreachable.
                  reason:
                    type: string
                    description: |-
                      shows the reason why a verification has FAILED, was DENIED or was ABORTED. It can take the values:

                      - “Fraud”
                      - "Not enough credit"
                      - "Blocked"
                      - "Denied by callback"
                      - "Invalid callback"
                      - "Internal error"
                      - "Destination denied"
                      - "Network error or number unreachable"
                      - "Failed pending"
                      - "SMS delivery failure"
                      - "Invalid CLI"
                      - "Invalid code"
                      - "Expired"
                      - "Hung up without entering valid code"
                  reference:
                    type: string
                    description: shows the reference Id that was passed (optionally) together with the verification request.
                  source:
                    type: boolean
                    description: |-
                      This is free text that the client is sending, but it is used to show if the call/SMS was intercepted or not. Typical values can be:

                      - “intercepted”
                      - "manual"
              examples:
                response:
                  value:
                    id: "1234567890"
                    method: callout
                    status: SUCCESSFUL
                    reference: abc_123
      operationId: getVerificationByTypeAndNumber
      description: |-
        Queries the verification result by sending the number to be verified.

        Authorization
        The following endpoint is [public authorized](https://developers.sinch.com/docs/using-rest#section-public-resources), so there is no need to use any signing for this request. This is so that the client can poll for the status of their callout verification without first being authorized.
  /yourEndpoint:
    summary: "Verification tequest callback"
    post:
      tags:
        - Callbacks
      operationId: post-yourEndpoint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                title: RequestEventResponse
                type: object
                properties:
                  action:
                    type: string
                    description: |-
                      action allows or denies the verification to be executed. It can take these values:

                      - allow
                      - deny
                  sms:
                    title: Sms
                    type: object
                    x-examples:
                      SMS with pre-defined PIN:
                        action: allow
                        sms:
                          code: "12345"
                      Set the SMS language to Spanish:
                        action: allow
                        sms:
                          code: "12345"
                          acceptLanguage:
                            - es-ES
                    properties:
                      code:
                        type: string
                        description: "contains the SMS PIN that should be used. By default, the Sinch dashboard will automatically generate PIN codes for SMS verification."
                      acceptLanguage:
                        type: string
                        description: |-
                          allows to set (or override if provided in the API request) the SMS verification content language.

                          Please note that the content language specified in the API request or in the callback can be overridden by carrier provider specific templates, due to compliance and legal requirements, such as [US shortcode requirements](https://www.wmcglobal.com/storage/us_resources/ctia-short-code-monitoring-handbook-current-Short-Code-Monitoring-Handbook-v1.7.pdf).
                  flashCall:
                    title: FlashCall
                    type: object
                    x-examples:
                      Flashcall with pre-defined CLI:
                        action: allow
                        flashCall:
                          cli: "+4445874587"
                      Flashcall with pre-defined dial timeout:
                        action: allow
                        flashCall:
                          dialTimeout: 10
                    properties:
                      cli:
                        type: string
                        description: "shows the phone number that will be displayed to the user when the flashcall is received on the user's phone. By default, the Sinch dashboard will select randomly the CLI that will be displayed during a flashcall from a pool of numbers. \n\nPlease note that in order to set your own CLI, you need to own the number that you will set."
                      dialTimeout:
                        type: integer
                        description: "shows the maximum time that a flashcall verification will be active and can be completed. If the phone number has not been verified successfully during this time, then the verification request will fail. By default, the Sinch dashboard will automatically optimize dial timeout during a flashcall. "
                  callout:
                    title: Callout
                    type: object
                    properties:
                      locale:
                        type: string
                        description: 'it is used to indicate the language that should be used for the text-to-speech message. Only "en-US" is supported currently.'
                      ttsMenu:
                        type: string
                        description: 'is the message that can be played to the user when the phone call is picked up. Default value is: "To verify your phone number, please press {pin}. If you didn’t request this call, please hangup."'
                      wavFile:
                        type: string
                        description: is the wav file that can be played to the user when the phone call is picked up.
                      pin:
                        type: string
                        description: 'is the digit that the user should press to verify the phone number. Default value is "1".'
                description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                event:
                  type: string
                method:
                  type: string
                identity:
                  title: Identity
                  type: object
                  properties:
                    identity:
                      type: object
                      properties:
                        type:
                          type: string
                        endpoint:
                          type: string
                  description: 'identity indicates type of endpoint that will be verified and specifies the particular endpoint. The support endpoint type currently is only "number".'
                price:
                  title: money
                  type: object
                  properties:
                    amount:
                      type: number
                    currencyId:
                      type: string
                reference:
                  type: string
                custom:
                  type: string
                acceptLanguage:
                  type: string
            examples:
              example:
                value:
                  id: "1234567890"
                  event: VerificationRequestEvent
                  method: sms
                  identity:
                    type: number
                    endpoint: "+46700000000"
                  price:
                    amount: 10.5
                    currencyId: USD
  /verificationResult:
    summary: "Verification result callback"
    post:
      tags:
        - Callbacks
      summary: "Verification result"
      operationId: post-verificationResult
      responses:
        "200":
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              title: ResultEvent
              type: object
              properties:
                id:
                  type: string
                  description: the verification id
                event:
                  type: string
                  description: 'contains the callback event that was received. It has the value "VerificationResultEvent".'
                method:
                  type: string
                  description: |-
                    shows the verification method. It can take the values:

                    - "flashcall"
                    - "sms"
                    - "callout"
                identity:
                  type: string
                  description: 'contains the endpoint information that is being verified. It contains a "type" object and an "endpoint" object'
                status:
                  type: string
                  description: |-
                    shows the current status of the verification request. It can take the values:

                    - "PENDING": the verification is ongoing
                    - "SUCCESSFUL": the verification was successful
                    - "FAIL": the verification attempt was made, but the number was not verified
                    - "DENIED": the verification attempt was denied by Sinch or your backend
                    - "ABORTED": the verification attempt was aborted by requesting a new verification
                    - "ERROR": the verification could not be completed due to a network error or the number being unreachable.
                reason:
                  type: string
                  description: " shows the reason why a verification has FAILED, was DENIED or was ABORTED. It can take the values:\n\n- “Fraud”\n- \"Not enough credit\"\n- \"Blocked\"\n- \"Denied by callback\"\n- \"Invalid callback\"\n- \"Internal error\"\n- \"Destination denied\"\n- \"Network error or number unreachable\"\n- \"Failed pending\"\n- \"SMS delivery failure\"\n- \"Invalid CLI\"\n- \"Invalid code\"\n- \"Expired\"\n- \"Hung up without entering valid code\""
                reference:
                  type: string
                  description: shows the reference Id that was passed (optionally) together with the verification request.
                source:
                  type: string
                  description: |-
                    This is free text that the client is sending, but it is used to show if the call/SMS was intercepted or not. Typical values can be:

                    - “intercepted”
                    - "manual"
                custom:
                  type: string
                  description: displays a custom string that can be passed provided during a verification request.
              x-examples:
                example:
                  id: "1234567890"
                  event: VerificationResultEvent
                  method: sms
                  identity:
                    type: number
                    endpoint: "+46700000000"
                  status: SUCCESSFUL
      description: |-
        This callback event is is a POST request to the specified verification
        callback URL and triggered when a verification has been completed and
        the result is known. It is used to report the verification result to the
        developer's backend application. This callback event is only triggered
        when the verification callback URL is specified.

        Authorization
        You can find more information on callback request signing `here

        <callbackrequestsigning>`.
components:
  schemas:
    FlashCallOptions:
      title: FlashCallOptions
      type: object
      properties:
        cli:
          type: string
        dialTimeout:
          type: integer
      description: "is an optional object for flashCall verifications. It allows you to specify Cli and dial time out parameters for flashCall. Cli is a particular number to be used as caller Id in the flashCall. The number that you specify needs to be a number that you have rented from the Sinch portal. DialTimeout should be specified in seconds and must be between 5 and 120. FlashCallOptions object can be specified optionally, and only if the verification request was triggered from your backend (no SDK client) through an [Application signed request](https://developers.sinch.com/docs/using-rest#section-application-signed-request)."
    VerificationRequest:
      title: VerificationRequest
      type: object
      properties:
        identity:
          $ref: "#/components/schemas/Identity"
        method:
          type: string
          default: sms
          example: sms
          description: |-
            indicates the verification method. Possible values are:

            - flashCall
            - sms
            - callout
        reference:
          type: string
          description: can be used to pass your own reference in the request for tracking purposes.
        custom:
          type: string
          description: can be used to pass custom data in the request.
        metadata:
          title: metadata
          type: object
          properties:
            flashCallOptions:
              title: FlashCallOptions
              type: object
              properties:
                cli:
                  type: string
                dialTimeout:
                  type: integer
              description: "is an optional object for flashCall verifications. It allows you to specify Cli and dial time out parameters for flashCall. Cli is a particular number to be used as caller Id in the flashCall. The number that you specify needs to be a number that you have rented from the Sinch portal. DialTimeout should be specified in seconds and must be between 5 and 120. FlashCallOptions object can be specified optionally, and only if the verification request was triggered from your backend (no SDK client) through an [Application signed request](https://developers.sinch.com/docs/using-rest#section-application-signed-request)."
          description: ""
      required:
        - identity
        - method
    identity:
      title: Identity
      type: object
      properties:
        type:
          type: string
          default: number
          example: number
        endpoint:
          type: string
          default: +55551231212
          description: The phonenumber you want to verify
          example: +15551231212
      description: 'Set type of endpoint that will be verified and specifies the particular endpoint. The support endpoint type currently is only "number".'
    metadata:
      title: metadata
      type: object
      properties:
        flashCallOptions:
          title: FlashCallOptions
          type: object
          properties:
            cli:
              type: string
            dialTimeout:
              type: integer
          description: "is an optional object for flashCall verifications. It allows you to specify Cli and dial time out parameters for flashCall. Cli is a particular number to be used as caller Id in the flashCall. The number that you specify needs to be a number that you have rented from the Sinch portal. DialTimeout should be specified in seconds and must be between 5 and 120. FlashCallOptions object can be specified optionally, and only if the verification request was triggered from your backend (no SDK client) through an [Application signed request](https://developers.sinch.com/docs/using-rest#section-application-signed-request)."
      description: ""
    VerificationResponse:
      title: VerificationResponse
      type: object
      properties:
        id:
          type: string
        sms:
          title: SmsVerificationData
          type: object
          properties:
            template:
              type: string
        flashCall:
          title: FlashCallVerificationData
          type: object
          properties:
            cliFilter:
              type: string
              description: is the filter that should be applied for incoming calls to intercept the flashcall.
            inerceptionTimeout:
              type: integer
              description: indicates the amount of seconds that the SDK client will be waiting for the flashcall.
        callout:
          title: CalloutVerificationData
          type: object
          description: ""
          properties:
            startPollingafter:
              type: integer
            stopPollingAfter:
              type: integer
            pollingInterval:
              type: integer
    SmsVerificationData:
      title: SmsVerificationData
      type: object
      properties:
        template:
          type: string
    FlashCallVerificationData:
      title: FlashCallVerificationData
      type: object
      properties:
        cliFilter:
          type: string
          description: is the filter that should be applied for incoming calls to intercept the flashcall.
        inerceptionTimeout:
          type: integer
          description: indicates the amount of seconds that the SDK client will be waiting for the flashcall.
    CalloutVerificationData:
      title: CalloutVerificationData
      type: object
      description: ""
      properties:
        startPollingafter:
          type: integer
        stopPollingAfter:
          type: integer
        pollingInterval:
          type: integer
    VerificationReportRequest:
      title: VerificationReportRequest
      type: object
      properties:
        method:
          type: string
          description: |-
            indicates the verification method. Possible values are:

            - flashCall
            - sms
        sms:
          title: SmsVerificationReportData
          type: object
          properties:
            code:
              type: string
              description: indicates the PIN code that was inputted by the user in the app
            cli:
              type: string
              description: indicates the caller Id of the flashCall or the sender Id of the SMS.
        flashCall:
          title: flashCallVerificationReportData
          type: object
          properties:
            cli:
              type: string
              description: indicates the caller Id of the flashCall or the sender Id of the SMS.
    SmsVerificationReportData:
      title: SmsVerificationReportData
      type: object
      properties:
        code:
          type: string
          description: indicates the PIN code that was inputted by the user in the app
        cli:
          type: string
          description: indicates the caller Id of the flashCall or the sender Id of the SMS.
    flashCallVerificationReportData:
      title: flashCallVerificationReportData
      type: object
      properties:
        cli:
          type: string
          description: indicates the caller Id of the flashCall or the sender Id of the SMS.
    VerificationResult:
      title: VerificationResult
      type: object
      properties:
        id:
          type: string
          description: the verification id
        method:
          type: string
          description: " shows the verification method. It can take the values:\n\n- \"flashcall\"\n- \"sms\"\n- \"callout\""
        status:
          type: string
          description: |-
            shows the current status of the verification request. It can take the values:

            - "PENDING": the verification is ongoing
            - "SUCCESSFUL": the verification was successful
            - "FAIL": the verification attempt was made, but the number was not verified
            - "DENIED": the verification attempt was denied by Sinch or your backend
            - "ABORTED": the verification attempt was aborted by requesting a new verification
            - "ERROR": the verification could not be completed   due to a network error or the number being unreachable.
        reason:
          type: string
          description: |-
            shows the reason why a verification has FAILED, was DENIED or was ABORTED. It can take the values:

            - “Fraud”
            - "Not enough credit"
            - "Blocked"
            - "Denied by callback"
            - "Invalid callback"
            - "Internal error"
            - "Destination denied"
            - "Network error or number unreachable"
            - "Failed pending"
            - "SMS delivery failure"
            - "Invalid CLI"
            - "Invalid code"
            - "Expired"
            - "Hung up without entering valid code"
        reference:
          type: string
          description: shows the reference Id that was passed (optionally) together with the verification request.
        source:
          type: boolean
          description: |-
            This is free text that the client is sending, but it is used to show if the call/SMS was intercepted or not. Typical values can be:

            - “intercepted”
            - "manual"
    money:
      title: money
      type: object
      properties:
        amount:
          type: number
        currencyId:
          type: string
    RequestEventResponse:
      title: RequestEventResponse
      type: object
      properties:
        action:
          type: string
          description: |-
            action allows or denies the verification to be executed. It can take these values:

            - allow
            - deny
        sms:
          title: Sms
          type: object
          x-examples:
            SMS with pre-defined PIN:
              action: allow
              sms:
                code: "12345"
            Set the SMS language to Spanish:
              action: allow
              sms:
                code: "12345"
                acceptLanguage:
                  - es-ES
          properties:
            code:
              type: string
              description: "contains the SMS PIN that should be used. By default, the Sinch dashboard will automatically generate PIN codes for SMS verification."
            acceptLanguage:
              type: string
              description: |-
                allows to set (or override if provided in the API request) the SMS verification content language.

                Please note that the content language specified in the API request or in the callback can be overridden by carrier provider specific templates, due to compliance and legal requirements, such as [US shortcode requirements](https://www.wmcglobal.com/storage/us_resources/ctia-short-code-monitoring-handbook-current-Short-Code-Monitoring-Handbook-v1.7.pdf).
        flashCall:
          title: FlashCall
          type: object
          x-examples:
            Flashcall with pre-defined CLI:
              action: allow
              flashCall:
                cli: "+4445874587"
            Flashcall with pre-defined dial timeout:
              action: allow
              flashCall:
                dialTimeout: 10
          properties:
            cli:
              type: string
              description: "shows the phone number that will be displayed to the user when the flashcall is received on the user's phone. By default, the Sinch dashboard will select randomly the CLI that will be displayed during a flashcall from a pool of numbers. \n\nPlease note that in order to set your own CLI, you need to own the number that you will set."
            dialTimeout:
              type: integer
              description: "shows the maximum time that a flashcall verification will be active and can be completed. If the phone number has not been verified successfully during this time, then the verification request will fail. By default, the Sinch dashboard will automatically optimize dial timeout during a flashcall. "
        callout:
          title: Callout
          type: object
          properties:
            locale:
              type: string
              description: 'it is used to indicate the language that should be used for the text-to-speech message. Only "en-US" is supported currently.'
            ttsMenu:
              type: string
              description: 'is the message that can be played to the user when the phone call is picked up. Default value is: "To verify your phone number, please press {pin}. If you didn’t request this call, please hangup."'
            wavFile:
              type: string
              description: is the wav file that can be played to the user when the phone call is picked up.
            pin:
              type: string
              description: 'is the digit that the user should press to verify the phone number. Default value is "1".'
      description: ""
    Sms:
      title: Sms
      type: object
      x-examples:
        SMS with pre-defined PIN:
          action: allow
          sms:
            code: "12345"
        Set the SMS language to Spanish:
          action: allow
          sms:
            code: "12345"
            acceptLanguage:
              - es-ES
      properties:
        code:
          type: string
          description: "contains the SMS PIN that should be used. By default, the Sinch dashboard will automatically generate PIN codes for SMS verification."
        acceptLanguage:
          type: string
          description: |-
            allows to set (or override if provided in the API request) the SMS verification content language.

            Please note that the content language specified in the API request or in the callback can be overridden by carrier provider specific templates, due to compliance and legal requirements, such as [US shortcode requirements](https://www.wmcglobal.com/storage/us_resources/ctia-short-code-monitoring-handbook-current-Short-Code-Monitoring-Handbook-v1.7.pdf).
    FlashCall:
      title: FlashCall
      type: object
      x-examples:
        Flashcall with pre-defined CLI:
          action: allow
          flashCall:
            cli: "+4445874587"
        Flashcall with pre-defined dial timeout:
          action: allow
          flashCall:
            dialTimeout: 10
      properties:
        cli:
          type: string
          description: "shows the phone number that will be displayed to the user when the flashcall is received on the user's phone. By default, the Sinch dashboard will select randomly the CLI that will be displayed during a flashcall from a pool of numbers. \n\nPlease note that in order to set your own CLI, you need to own the number that you will set."
        dialTimeout:
          type: integer
          description: "shows the maximum time that a flashcall verification will be active and can be completed. If the phone number has not been verified successfully during this time, then the verification request will fail. By default, the Sinch dashboard will automatically optimize dial timeout during a flashcall. "
    Callout:
      title: Callout
      type: object
      properties:
        locale:
          type: string
          description: 'it is used to indicate the language that should be used for the text-to-speech message. Only "en-US" is supported currently.'
        ttsMenu:
          type: string
          description: 'is the message that can be played to the user when the phone call is picked up. Default value is: "To verify your phone number, please press {pin}. If you didn’t request this call, please hangup."'
        wavFile:
          type: string
          description: is the wav file that can be played to the user when the phone call is picked up.
        pin:
          type: string
          description: 'is the digit that the user should press to verify the phone number. Default value is "1".'
    ResultEvent:
      title: ResultEvent
      type: object
      properties:
        id:
          type: string
          description: the verification id
        event:
          type: string
          description: 'contains the callback event that was received. It has the value "VerificationResultEvent".'
        method:
          type: string
          description: |-
            shows the verification method. It can take the values:

            - "flashcall"
            - "sms"
            - "callout"
        identity:
          type: string
          description: 'contains the endpoint information that is being verified. It contains a "type" object and an "endpoint" object'
        status:
          type: string
          description: |-
            shows the current status of the verification request. It can take the values:

            - "PENDING": the verification is ongoing
            - "SUCCESSFUL": the verification was successful
            - "FAIL": the verification attempt was made, but the number was not verified
            - "DENIED": the verification attempt was denied by Sinch or your backend
            - "ABORTED": the verification attempt was aborted by requesting a new verification
            - "ERROR": the verification could not be completed due to a network error or the number being unreachable.
        reason:
          type: string
          description: " shows the reason why a verification has FAILED, was DENIED or was ABORTED. It can take the values:\n\n- “Fraud”\n- \"Not enough credit\"\n- \"Blocked\"\n- \"Denied by callback\"\n- \"Invalid callback\"\n- \"Internal error\"\n- \"Destination denied\"\n- \"Network error or number unreachable\"\n- \"Failed pending\"\n- \"SMS delivery failure\"\n- \"Invalid CLI\"\n- \"Invalid code\"\n- \"Expired\"\n- \"Hung up without entering valid code\""
        reference:
          type: string
          description: shows the reference Id that was passed (optionally) together with the verification request.
        source:
          type: string
          description: |-
            This is free text that the client is sending, but it is used to show if the call/SMS was intercepted or not. Typical values can be:

            - “intercepted”
            - "manual"
        custom:
          type: string
          description: displays a custom string that can be passed provided during a verification request.
      x-examples:
        example:
          id: "1234567890"
          event: VerificationResultEvent
          method: sms
          identity:
            type: number
            endpoint: "+46700000000"
          status: SUCCESSFUL
